name: Reddit Crawler Auto Push (Time-based DB Upload)

on:
  schedule:
    - cron: "0 0 * * *"  
  workflow_dispatch:       

jobs:
  crawl:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt pydrive2

      - name: Run Reddit crawler (create timestamped .db)
        env:
          CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          SECRET: ${{ secrets.REDDIT_SECRET }}
          USERNAME: ${{ secrets.REDDIT_USERNAME }}
          PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        run: |
          mkdir -p database
          timestamp=$(date '+%Y-%m-%d_%H-%M-%S')
          DB_NAME="data_${timestamp}.db"
          echo "DB_NAME=${DB_NAME}" >> $GITHUB_ENV

          python -m get_data.reddit_crawler_to_sqlite --db "database/${DB_NAME}"

          echo "Created database/${DB_NAME}"

      - name: Upload .db to Google Drive via OAuth2
        env:
          GDRIVE_TOKEN: ${{ secrets.GDRIVE_TOKEN }}
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          DB_NAME: ${{ env.DB_NAME }}
          CLIENT_ID: ${{ secrets.GDRIVE_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.GDRIVE_CLIENT_SECRET }}
        run: |
          # Create file credentials.json from secret GDRIVE_TOKEN (JSON đầy đủ có access_token, refresh_token...)
          echo "${GDRIVE_TOKEN}" > credentials.json

          # Create file settings.yaml to PyDrive2 know client_id, client_secret
          echo "client_config_backend: settings" > settings.yaml
          echo "client_config:" >> settings.yaml
          echo "  client_id: ${CLIENT_ID}" >> settings.yaml
          echo "  client_secret: ${CLIENT_SECRET}" >> settings.yaml
          echo "save_credentials: True" >> settings.yaml
          echo "save_credentials_backend: file" >> settings.yaml
          echo "save_credentials_file: credentials.json" >> settings.yaml
          echo "get_refresh_token: True" >> settings.yaml
          echo "oauth_scope:" >> settings.yaml
          echo "  - https://www.googleapis.com/auth/drive" >> settings.yaml

          # 🐍 run script upload file to Google Drive
          python <<'PY'
          import os
          from pydrive2.auth import GoogleAuth
          from pydrive2.drive import GoogleDrive

          db_name = os.environ["DB_NAME"]
          folder_id = os.environ["GDRIVE_FOLDER_ID"]
          file_path = f"database/{db_name}"

          gauth = GoogleAuth()
          gauth.LoadCredentialsFile("credentials.json")

          if gauth.access_token_expired:
              gauth.Refresh()
          else:
              gauth.Authorize()

          gauth.SaveCredentialsFile("credentials.json")

          drive = GoogleDrive(gauth)

          gfile = drive.CreateFile({
              "title": db_name,
              "parents": [{"id": folder_id}]
          })
          gfile.SetContentFile(file_path)
          gfile.Upload()

          print(f"Uploaded {db_name} to folder {folder_id} successfully.")
          PY
