name: Reddit Crawler Auto Push (Time-based DB Upload)

on:
  schedule:
    - cron: "0 0 * * *"   # cháº¡y má»—i ngÃ y lÃºc 7h sÃ¡ng VN (0h UTC)
  workflow_dispatch:       # cho phÃ©p cháº¡y thá»§ cÃ´ng

jobs:
  crawl:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # CÃ i Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # CÃ i dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt pydrive2

      # Táº¡o file .db tá»« Reddit
      - name: Run Reddit crawler (create .db)
        env:
          CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          SECRET: ${{ secrets.REDDIT_SECRET }}
          USERNAME: ${{ secrets.REDDIT_USERNAME }}
          PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        run: |
          mkdir -p database
          timestamp=$(date '+%Y-%m-%d_%H-%M-%S')
          DB_NAME="data_${timestamp}.db"
          echo "DB_NAME=${DB_NAME}" >> $GITHUB_ENV
          echo "ðŸ“¦ Creating database/${DB_NAME}"

          python -m get_data.reddit_crawler_to_sqlite --db "database/${DB_NAME}"

          echo "âœ… Created file:"
          ls -l database/

      # Upload lÃªn Google Drive báº±ng OAuth 2.0
      - name: Upload file to Google Drive
        env:
          GDRIVE_TOKEN: ${{ secrets.GDRIVE_TOKEN }}
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          DB_NAME: ${{ env.DB_NAME }}
        run: |
          # LÆ°u token OAuth
          echo "${GDRIVE_TOKEN}" > credentials.json

          python <<'PY'
          import os
          from pydrive2.auth import GoogleAuth
          from pydrive2.drive import GoogleDrive
          import json

          db_name = os.environ["DB_NAME"]
          folder_id = os.environ["GDRIVE_FOLDER_ID"]
          file_path = f"database/{db_name}"

          # Load credentials tá»« file JSON
          with open("credentials.json") as f:
              cred_data = json.load(f)

          gauth = GoogleAuth()
          gauth.credentials = cred_data
          gauth.Authorize()  # Náº¿u access_token háº¿t háº¡n, PyDrive2 tá»± refresh báº±ng refresh_token

          drive = GoogleDrive(gauth)

          gfile = drive.CreateFile({
              "title": db_name,
              "parents": [{"id": folder_id}]
          })
          gfile.SetContentFile(file_path)
          gfile.Upload()

          print(f"âœ… Uploaded {db_name} to folder {folder_id} successfully.")
          PY
